{"version":3,"sources":["assets/search-solid.svg","assets sync /^/.*/.jpg$","assets/Ash.jpg","assets/BasicBg.jpg","assets/Clear.jpg","assets/Clouds.jpg","assets/Drizzle.jpg","assets/Dust.jpg","assets/Fog.jpg","assets/Haze.jpg","assets/Mist.jpg","assets/Rain.jpg","assets/Sand.jpg","assets/Smoke.jpg","assets/Snow.jpg","assets/Squall.jpg","assets/Thunderstorm.jpg","assets/Tornado.jpg","components/Suggestions/Suggestions.js","components/Search/Search.js","components/Weather/Weather.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","Suggestions","props","matches","val","key","onClick","fetchID","name","state","country","slice","styles","length","display","height","style","className","isLoaded","Search","loupe","require","undefined","onSubmit","handleFalseSubmit","placeholder","type","value","onChange","handleChange","src","alt","Weather","icon","newDate","Date","now","toString","data","format","temperature","temp_min","temp_max","temp_feels","main","description","wind","pressure","humidity","App","a","preventDefault","cityId","target","axios","get","then","res","setState","weather","temp","speed","feels_like","sys","filter","regex","RegExp","match","sort","b","basicBg","weatherBg","this","document","body","background","date","React","Component","Boolean","window","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2756f4fa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search-solid.dcb8f2b7.svg\";","var map = {\n\t\"./Ash.jpg\": 56,\n\t\"./BasicBg.jpg\": 57,\n\t\"./Clear.jpg\": 58,\n\t\"./Clouds.jpg\": 59,\n\t\"./Drizzle.jpg\": 60,\n\t\"./Dust.jpg\": 61,\n\t\"./Fog.jpg\": 62,\n\t\"./Haze.jpg\": 63,\n\t\"./Mist.jpg\": 64,\n\t\"./Rain.jpg\": 65,\n\t\"./Sand.jpg\": 66,\n\t\"./Smoke.jpg\": 67,\n\t\"./Snow.jpg\": 68,\n\t\"./Squall.jpg\": 69,\n\t\"./Thunderstorm.jpg\": 70,\n\t\"./Tornado.jpg\": 71\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 55;","module.exports = __webpack_public_path__ + \"static/media/Ash.6763e1a6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/BasicBg.24074617.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Clear.1a6abfff.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Clouds.f052271a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Drizzle.3fb7bab9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Dust.2963ea68.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Fog.5fee32ab.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Haze.c4092133.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Mist.868ff8dc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Rain.4f1d0b50.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Sand.93d43476.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Smoke.c1168d0d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Snow.65fe5e2e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Squall.182533a4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Thunderstorm.4c6e19b6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Tornado.d0264b1d.jpg\";","import React from 'react';\r\nimport \"./Suggestions.css\"\r\n\r\n\r\nconst Suggestions = (props) => {\r\n\t\r\n\tconst matches = props.matches\r\n\r\n\t.map((val) => {\r\n\t\treturn (\r\n\t\t\t\r\n\t\t\t\t<li id={val.id} key={val.id} onClick={props.fetchID}>\r\n\t\t\t\t\t{val.name ? val.name + \", \" : null}\r\n\t\t\t\t\t{val.state ? val.state + \", \" : null}\r\n\t\t\t\t\t{val.country ? val.country : null}\r\n\t\t\t\t</li>\t\r\n\t\t\t\r\n\t\t\t)\r\n\t})\r\n\t.slice(0, 50)\r\n\r\n\r\n\t//Using inline styles to hide or show Suggestions box\r\n\tlet styles = matches.length === 0 ? {display: \"none\"} : matches.length > 5 ? {height: \"300px\", display: \"block\"} : matches.length > 0 ? {display: \"block\"} : null\r\n\t\r\n\treturn (\r\n\t\t\t<ul style={styles} className=\"suggestions\">\r\n\t\t\t\t{props.isLoaded ? matches : null}\r\n\t\t\t</ul>\r\n\t\t)\r\n\t}\r\n\r\nexport default Suggestions","import React from 'react';\r\nimport Suggestions from \"../Suggestions/Suggestions\";\r\nimport \"./Search.css\";\r\n\r\n\r\n\r\nconst Search = (props) => {\t\r\n\t\r\n\tconst loupe = require('../../assets/search-solid.svg');\r\n\tlet id = props.matches[0] != undefined ? props.matches[0].id : null\r\n\t\r\n\t\r\n\treturn (\r\n\r\n\t\t<div className=\"search-wrapper\">\r\n\t\t\t<form id={id} className=\"searchForm\" onSubmit={props.isLoaded ? props.fetchID : props.handleFalseSubmit}>\r\n\t\t\t\t\t<input placeholder=\"Search for a city...\" id=\"search\" type=\"text\" value={props.value} onChange={props.handleChange}/>\r\n\t\t\t\t\t<button>\r\n\t\t\t\t\t\t<img src={loupe} alt=\"search-img\"/>\r\n\t\t\t\t\t</button>\t\r\n\t     </form>\r\n\t\t\t <p>For example: Kyiv, London, New York</p>\r\n\t     <Suggestions isLoaded={props.isLoaded} fetchID={props.fetchID} matches={props.matches}/>\r\n\t\t</div>\r\n\r\n\t\t)\r\n\t}\r\n\r\n\r\nexport default Search","import React from 'react';\r\nimport \"./Weather.css\"\r\nimport Moment from 'react-moment';\r\nimport 'moment-timezone';\r\n\r\nconst Weather = (props) => {\r\n\t\r\n\tconst icon = `http://openweathermap.org/img/wn/${props.icon}@2x.png`\r\n\r\n\tvar date = new Date(Date.now());\r\n    var newDate = date.toString();\r\n\r\n\treturn (\r\n\r\n\t\t<div className=\"weather\">\r\n\r\n      \t\t{props.data.name ? <Moment className=\"date\" format=\"DD.MM.YYYY\">{newDate}</Moment> : null}\r\n\r\n\t\t\t<h1>{props.data.name ? props.data.name +  \", \" : null} {props.data.country ? props.data.country : null}</h1>\r\n\t\t\t<h2>{props.data.temperature ? props.data.temperature + '\\u00b0C' : null}</h2>\r\n\t\t\t\r\n\t\t\t<div className=\"temperatures\">\r\n\t\t\t\t<p>{props.data.temp_min ? \"min \" + props.data.temp_min + '\\u00b0C' : null}</p>\r\n\t\t\t\t<p>{props.data.temp_max ? \"max \" + props.data.temp_max + '\\u00b0C' : null}</p>\r\n\t\t\t</div>\r\n\r\n\t\t\t<h2>{props.data.temp_feels ? \"feels like \" + props.data.temp_feels + '\\u00b0C' : null}</h2>\t\r\n\t\t\t<h1>{props.data.main}</h1>\r\n\t\t\t<h3>{props.data.description}</h3>\r\n\r\n\t\t\t{props.data.name ? <img src={icon} alt=\"weather-img\"/> : null }\r\n\r\n\t\t\t<div className=\"weather-state\">\r\n\t\t\t\t<p>{props.data.wind ? \"Wind speed: \" + props.data.wind + \" m/s\" : null} </p>\r\n\t\t\t\t<p>{props.data.pressure ? \"Pressure: \" + props.data.pressure + \" mm\" : null} </p>\t\t\r\n\t\t\t\t<p>{props.data.humidity ? \"Humidity: \" + props.data.humidity + \"%\" : null}</p>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t</div>\t\r\n\r\n\t\t)\r\n  }\r\n\r\nexport default Weather","import React from 'react';\nimport './App.css';\nimport Search from \"./components/Search/Search\";\nimport Weather from \"./components/Weather/Weather\";\nimport axios from \"axios\";\n\n\nconst API_KEY = \"6c2847c395792f9cf85a804db24ced16\";\n\nclass App extends React.Component {\n  \n  constructor(props) {\n    super(props)\n    this.state = {\n      main: \"\",\n      description: \"\",\n      temperature: \"\",\n      temp_max: \"\",\n      temp_min: \"\",\n      temp_feels: \"\",\n      wind: \"\",\n      pressure: \"\",\n      humidity: \"\",\n      id: \"\",\n      name: \"\",\n      country: \"\",\n      state: \"\",\n      isLoaded: false,\n      matches: [],\n      value: \"\",\n      basicBg: \"BasicBg\",\n      icon: \"\",\n      data: []\n    }\n  }\n\n\n\n//Fetching data from json file with cities id's for suggestion box\n\n  componentDidMount() {\n    axios.get(\"https://raw.githubusercontent.com/JACKAJ16/Cities-json/master/citylist.json\")\n      .then(res => {\n        this.setState({\n          data: res.data\n        })\n      })\n  }\n\n\n\n//Background updates due to the main weather state\n\n  componentDidUpdate() {\n    const weatherBg = require(`./assets/${this.state.main !== \"\" ? this.state.main : this.state.basicBg }.jpg`);\n    document.body.style.background = '#000 url('+weatherBg+')  no-repeat top center / cover';\n  }\n\n\n\n\n//Fetching weather data from API \n\n  fetchID = async(e) => {\n    e.preventDefault()\n    let cityId = e.target.id\n    \n      axios.get(`https://cors-anywhere.herokuapp.com/http://api.openweathermap.org/data/2.5/weather?id=${cityId}&appid=${API_KEY}&units=metric`)\n      .then(res => {\n        this.setState({\n          main: res.data.weather[0].main,\n          description: res.data.weather[0].description,\n          temperature: res.data.main.temp,\n          temp_max: res.data.main.temp_max,\n          temp_min: res.data.main.temp_min,\n          wind: res.data.wind.speed,\n          pressure: res.data.main.pressure,\n          humidity: res.data.main.humidity,\n          temp_feels: res.data.main.feels_like,\n          name: res.data.name,\n          country: res.data.sys.country,\n          state: res.data.state,\n          isLoaded: false,\n          value: \"\",\n          icon: res.data.weather[0].icon\n        })\n      }) \n   \n  }\n\n\n//Suggestions box method to compare input and cities in JSON file\n  handleChange = async(e) => {    \n \n    let matches = this.state.data.filter(state => {\n      const regex = new RegExp(`^${e.target.value}`, \"gi\");\n      return state.name.match(regex) || state.country.match(regex);\n    })\n    \n    if (e.target.value.length === 0) {\n      matches = []\n    } else if (e.target.value.length === 1 || e.target.value.length === 2) {\n      matches = matches.slice(0, 5)\n    }\n  \n\n    this.setState({\n      matches: matches\n      .sort((a, b) => { \n            return (\n              a.name > b.name ? 1 : a.name < b.name ? -1 :  0\n              )}),\n\n      value: e.target.value,\n      isLoaded: true\n    })\n\n  }\n\n\n\n  //Preventing page refresh while user presses search button with no suggestions on the screen\n  handleFalseSubmit(e) {\n    e.preventDefault()\n  }\n    \n  \n\n  render() {\n    return (\n      <div className=\"App\">\n        <Search handleFalseSubmit={this.handleFalseSubmit} isLoaded={this.state.isLoaded} handleChange={this.handleChange} matches={this.state.matches} value={this.state.value} fetchID={this.fetchID} />\n        <Weather date={this.state.date} icon={this.state.icon} data={this.state} />\n      </div>\n    );\n\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}